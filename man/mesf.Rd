% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mesf.R
\name{mesf}
\alias{mesf}
\title{Performs Moran eigenvector spatial filtering}
\usage{
mesf(
  formula,
  data = list(),
  lat,
  lon,
  family = gaussian,
  weights,
  offset,
  na.action = na.fail,
  listw = NULL,
  alpha = 0.05,
  verbose = NULL,
  zero.policy = NULL,
  n_eigs = 100,
  parallel = TRUE
)
}
\arguments{
\item{formula}{a symbolic description of the regression model to be fit}

\item{data}{a data frame containing the variables in the model}

\item{lat}{latitude column in data}

\item{lon}{longitude column in data}

\item{family}{the error distribution and link function to be used in the regression model}

\item{weights}{an optional vector of weights to be used in the model fitting process}

\item{offset}{an optional a priori known component to be included in the linear predictor during fitting}

\item{na.action}{a function to specify behavior for missing data (default options("na.action")), can also be na.omit or na.exclude}

\item{listw}{a spatial weights list, for example created by nblistw}

\item{alpha}{a stopping rule - no further eigenvectors will be added to model once p-value for residual autocorrelation exceeds alpha}

\item{verbose}{if TRUE prints messages indicating progress in model fitting}

\item{zero.policy}{if FALSE stop with error for any empty neighbor sets, if TRUE permit the weights list to be formed with zero-length weights vectors}

\item{n_eigs}{limit testing of which moran eigenvectors to include in regression model to the n_eigs eigenvectors of the spatial weights matrix with the largest magnitude}

\item{parallel}{whether to parallelize testing of moran eigenvectors, default is TRUE}
}
\description{
Quickly performs Moran eigenvector spatial filtering (MESF). MESF involves
removing/reducing spatial autocorrelation present in the residuals of
generalized linear models (GLMs). MESF searches eigenvectors of a transformed
spatial weights matrix (a doubly centered matrix). One-by-one, eigenvectors
are added to the right-hand side of the GLM and Moran's I statistic (a measure
of spatial autocorrelation) is calculated for the residuals of the newly fitted
model. The eigenvector which produces the lowest Moran's I is then permanently
added to the model and the search process repeated to choose additional
eigenvectors to add to the model. This process continues until the p-value
for Moran's I exceeds the specified stopping threshold alpha.

This implementation optimizes MESF for bigger data applications in several ways:
\enumerate{
\item Calculates Moran's I in a faster and more memory efficient way using the
moranfast() function implemented in this package. This function calculates
Moran's I on the fly rather than by calculating and storing in memory a new
distance matrix for every new set of residuals produced, and uses Rcpp/C++
to speed up calculation.
\item Creating the transformed spatial weights matrix (the eigenvectors
of which will be considered for inclusion in the model) using faster matrix
computations from Rfast package which runs in parallel in C++.
\item Reducing the set of eigenvectors over which to conduct a brute force search
to only the n_eigs largest eigenvectors of the transformed spatial weights
matrix. This speeds up the process by only computing the smaller number of
eigenvectors we are going to consider (using the RSpectra package) and by
requiring us to test fewer eigenvectors in the model re-fitting stage.
\item Running the search for eigenvectors to add to the model in parallel instead
of sequentially.
}
}
